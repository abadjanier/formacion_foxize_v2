<?php


namespace App\Backoffice\Users\Infrastructure\Persistence\Doctrine;


use App\Backoffice\Users\Domain\UserEmail;
use App\Shared\Domain\Utils;
use App\Shared\Infrastructure\Doctrine\DoctrineCustomType;
use Doctrine\DBAL\Platforms\AbstractPlatform;
use Doctrine\DBAL\Types\StringType;
use function Lambdish\Phunctional\last;

class UserEmailType extends StringType implements DoctrineCustomType
{

    public function convertToDatabaseValue($value, AbstractPlatform $platform)
    {
        return parent::convertToDatabaseValue($value, $platform); // TODO: Change the autogenerated stub
    }

    public function convertToPHPValue($value, AbstractPlatform $platform)
    {
        $PHPValue = parent::convertToPHPValue($value, $platform);
        return new UserEmail($PHPValue);
    }


    public static function customTypeName(): string
    {
        return Utils::toSnakeCase(str_replace('Type', '', last(explode('\\', static::class))));
    }
}